@page
@model CricketApp.Pages.ForgotPassword.ForgotPasswordModel
@{
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Forgot Password</title>

</head>
<body>

    <h1>Forgot Password</h1>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    <form id="forgotPasswordForm" method="post" action="/forgot_password">
        <div>
            <label for="email">Email Address:</label>
            <input type="email" id="email" name="email" required>
        </div>

        <div class="error-message" id="emailErrorMessage"></div>

        <button type="submit" onclick="validateForgotPassword()">Submit</button>
    </form>

    <script>
        function validateForgotPassword() {
            const email = document.getElementById('email').value;

            // Validate email format using isValidEmail function

            if (isValidEmail(email)) {
                // Send forgot password request to server

                fetch('/forgot_password/send_reset_link', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        email: email
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.isSuccess) {
                            // Reset form and display success message
                            document.getElementById('forgotPasswordForm').reset();
                            showMessage('Password reset link has been sent to your email. Please check your inbox and follow the instructions.');
                        } else {
                            // Display error message
                            showMessage('Invalid email address or user not found.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        showMessage('An error occurred. Please try again.');
                    });
            } else {
                // Display error message for invalid email format
                showMessage('Invalid email format.');
            }
        }

        function isValidEmail(email) {
            // Implement email validation logic here
            // Use regular expression or email validation library
            return true; // Replace this with actual validation logic
        }

        function showMessage(message) {
            // Implement logic to display messages using the 'emailErrorMessage' element
            // ...
        }
    </script>
</body>
</html>
